---
# title: role-samba4-replica-ad-dc
# Author: Rafael R. M.
# Version: 1.0
# File: tasks/ubuntu-2204-amd64-repl.yml
#
# Description: Joining a replica Active Directory Domain Controller on Ubuntu 22.04
#              with TLS/LDAP hardening and a validation flag to ensure idempotency.

- name: "Check if role was already executed"
  stat:
    path: /etc/ansible/flags/ansible_samba_dc_replica_installed
  register: role_flag

- name: "Stop if role is already installed"
  fail:
    msg: "Role is already installed"
  when:
    - role_flag.stat.exists

- name: "Check Samba server role"
  shell: testparm -s | grep 'server role'
  register: server_role
  changed_when: false
  failed_when: >
    server_role.rc != 0 and 'not found' not in server_role.stderr

- name: "Fail if server is a Domain Controller"
  fail:
    msg: "This host is a Domain Controller. Operation aborted."
  when: "'active directory domain controller' in server_role.stdout"

- name: "Install dependencies"
  apt:
    name:
      - acl
      - samba
      - smbclient
      - krb5-config
      - krb5-user
      - winbind
      - libpam-winbind
      - libnss-winbind
      - chrony
    update_cache: yes
    state: present

- name: "Configure NTP servers"
  lineinfile:
    path: /etc/chrony/chrony.conf
    insertafter: '^# Use servers from the NTP Pool Project.*'
    line: |
      server {{ primary_ntp }} iburst
      server {{ secondary_ntp }} iburst
  notify:
    - restart_ntp

- name: "Ensure NTP service is enabled and running"
  systemd:
    name: chrony
    enabled: true
    state: started

- name: "Restart NTP service"
  systemd:
    name: chrony
    state: restarted
  notify:
    - restart_ntp

- name: "Disable conflicting services"
  ansible.builtin.systemd_service:
    enabled: no
    state: stopped
    masked: yes
    name: "{{ item }}"
  loop:
    - samba-ad-dc.service
    - smbd.service
    - nmbd.service
    - winbind.service
    - systemd-resolved
  when:
    - smb_dc_result.rc != 0

- name: "Back up /etc/samba/smb.conf to /etc/samba/smb.conf.initial"
  copy:
    src: /etc/samba/smb.conf
    dest: /etc/samba/smb.conf.initial
    remote_src: yes
    force: no
  when:
    - smb_dc_result.rc != 0

- name: "Remove /etc/samba/smb.conf"
  file:
    path: /etc/samba/smb.conf
    state: absent
  when:
    - smb_dc_result.rc != 0

- name: "Transfer adc/smb.conf.j2 to /etc/samba/smb.conf"
  template:
    src: adc/smb.conf.j2
    dest: /etc/samba/smb.conf

- name: "Deploy TLS certificates"
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0600"
    remote_src: false
  loop:
    - { src: "tls/server.crt", dest: "/var/lib/samba/private/server.crt" }
    - { src: "tls/server.key", dest: "/var/lib/samba/private/server.key" }
    - { src: "tls/ca.crt", dest: "/var/lib/samba/private/ca.crt" }

- name: "Back up /etc/resolv.conf to /etc/samba/resolv.conf.initial"
  copy:
    src: /etc/resolv.conf
    dest: /etc/samba/resolv.conf.initial
    remote_src: no
    force: no

- name: "Transfer resolv.conf.j2 to /etc/resolv.conf"
  template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf

- name: "Join domain as replica DC"
  raw: >
    samba-tool domain join
    {{ smb_realm }}
    DC
    -U "{{ smb_username }}%{{ smb_password }}"
    --dns-backend=SAMBA_INTERNAL
    --option="idmap_ldb:use rfc2307 = yes"
  when:
    - smb_dc_result.rc != 0
  notify: restart_samba_ad_dc

- name: "Configure DNS forwarder"
  replace:
    path: /etc/samba/smb.conf
    regexp: '127.0.0.53'
    replace: '{{ def_ad_dns_forwarder }}'
    backup: yes
  notify: restart_samba_ad_dc

- name: "Back up /etc/krb5.conf to /etc/krb5.conf.initial"
  copy:
    src: /etc/krb5.conf
    dest: /etc/krb5.conf.initial
    remote_src: yes
    force: no

- name: "Symlink Kerberos config"
  file:
    src: /var/lib/samba/private/krb5.conf
    dest: /etc/krb5.conf
    state: link
    force: yes
  notify: restart_samba_ad_dc

- name: "Enable and start Samba AD-DC"
  ansible.builtin.systemd_service:
    masked: no
    enabled: yes
    state: started
    name: samba-ad-dc.service

- name: "Allow Samba traffic"
  ufw:
    rule: allow
    name: Samba

- name: "Allow DNS traffic on TCP/UDP port 53"
  ufw:
    rule: allow
    port: "53"
    proto: "{{ item }}"
  loop:
    - tcp
    - udp

- name: Make flag directory
  ansible.builtin.file:
    path: /etc/ansible/flags
    state: directory
    mode: 0775
    recurse: yes

- name: "Create installed flag"
  file:
    path: /etc/ansible/flags/ansible_samba_dc_replica_installed
    state: touch
    mode: '0644'